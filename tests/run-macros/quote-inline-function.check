Normal function
{
  var i: scala.Int = 0
  val j: scala.Int = 5
  while (i.<(j)) {
    f.apply(i)
    i = i.+(1)
  }
  while ({
    f.apply(i)
    i = i.+(1)
    i.<(j)
  }) ()
}

By name function
{
  var i: scala.Int = 0
  val j: scala.Int = 5
  while (i.<(j)) {
    f.apply(i)
    i = i.+(1)
  }
  while ({
    f.apply(i)
    i = i.+(1)
    i.<(j)
  }) ()
}

Inline function
{
  var i: scala.Int = 0
  val j: scala.Int = 5
  while (i.<(j)) {
    val x$5: scala.Int = i
    scala.Predef.println(x$5)
    i = i.+(1)
  }
  while ({
    val x$6: scala.Int = i
    scala.Predef.println(x$6)
    i = i.+(1)
    i.<(j)
  }) ()
}
